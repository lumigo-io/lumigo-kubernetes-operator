---
# Source: lumigo-operator/templates/uninstallation/uninstall-hook.yaml
MANIFEST:
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    helm.sh/hook: pre-delete
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded # we skip hook-failed so that we can look up logs if it fails
  labels:
    app.kubernetes.io/component: manager
    app.kubernetes.io/created-by: lumigo
    app.kubernetes.io/instance: lumigo
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: lumigo-operator
    app.kubernetes.io/part-of: lumigo
    app.kubernetes.io/version: "0"
    control-plane: controller-manager
    helm.sh/chart: lumigo-operator-0
    lumigo.auto-trace: "false" # We do not need the operator to inject itself
  name: lumigo-lumigo-operator-uninstall-hook
spec:
  backoffLimit: 2
  completions: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: lumigo
        app.kubernetes.io/name: lumigo-operator
        control-plane: controller-manager
        lumigo.auto-trace: "false" # We do not need the operator to inject itself
      name: lumigo
    spec:
      activeDeadlineSeconds: 120 # Unfortunately, as of v3.11, Helm does not expose to templates its own timeout
      containers:
        - command:
            - /manager
            - --uninstall
          image: host.docker.internal:5000/controller:latest
          name: uninstall-hook
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
      restartPolicy: Never
      securityContext:
        fsGroup: 1234
        runAsNonRoot: true
      serviceAccountName: lumigo-lumigo-operator-controller-manager
---
# Source: lumigo-operator/templates/controller-deployment-and-webhooks.yaml
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURKakNDQWc2Z0F3SUJBZ0lSQU5mYVAvTHdnTjVlTnAwU3VhQ3RDM2t3RFFZSktvWklodmNOQVFFTEJRQXcKSFRFYk1Ca0dBMVVFQXhNU2JIVnRhV2R2TFhkbFltaHZiMnR6TFdOaE1CNFhEVEl6TURNd09ERTBORE0wTjFvWApEVEkwTURNd056RTBORE0wTjFvd0hURWJNQmtHQTFVRUF4TVNiSFZ0YVdkdkxYZGxZbWh2YjJ0ekxXTmhNSUlCCklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUF1OWdRcnMvVmNUTHY2dTExTzJxM09pSzMKVFNsbHVwVWUraUErWXEzVE1Ib3ZvNjYrbGdwVzUvNi9EMzhuUUswSXlYSlN1MUhSZU1zamxrY3JSd1JNaWhKQgprclBOMWRPS0FUTER5RS80SGJxVmFmdUdCZjllWEk5cHFvSVZpQTZ6QnpEaW80NlVMc0tCdEkxK2UxMVNGeGl2CmZ5bWZpT2FVR29DRVJuQ0pJL0tSM1kzVVZGTHFwYVFLT1hKSnlvYUEwbU95TXUrRUl0VVhWT1hrdkdvbGRVcXoKbjFtSFY3N1duQnVLVUxiUXF6MDFESHJuQWRhY3Y4S2ZwRUFWQ2MzM24vNjZIQmZGS0pxV2pvamlJVjJ3OWNjagpnTFJSUVp5b2JsRCs2aTBvdHNlcmtPdy9UMXJZVWJPMHhucWR1SlJOQ0VMbzlUeWh4Vld0TndCNlAvRGpnUUlECkFRQUJvMkV3WHpBT0JnTlZIUThCQWY4RUJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0cKQVFVRkJ3TUNNQThHQTFVZEV3RUIvd1FGTUFNQkFmOHdIUVlEVlIwT0JCWUVGSndBZHZwSjNSSWZqMW5wekJlMQo1ZjdWV2lRM01BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQ2NPVlhOTTJHS3h1OXlZcVRHdWFjcFN1UXRhN0QrCm1INm1rNHlPN1ZRSTRQdmRNZHQzMDArNjhhaWtmS0tUckpveWY0WjI1UDNHeThlcXlyamVmQnNhZjVYVmtoQkcKU2tQNzRXQkpDR0ZyRkZONG80WnFXdUMyK25OZHVFSWdJU3lZdHdFRHhHMkdpdlpwdURqRFZMT2VxL21UQ29jbQpZaVhvTGZHOFk1RzZsbmU3QkRFNGk0NkJ2Sjd6Z2NDMjBXMWxReFFBQVltNjRLdkdSTmhtOEo2SVhlNm5QdnVDCkt0MkJVdmcyUC96QWVYQ1J4TFU2REdPSmxXWmJ0QnNqMDVNcXAxaUxYQlJSVHlsdStKOXNoR0pYOU5BUXYrY1IKekdwc0FETjArM1o4V1RPQWE4SFllcFU2SitreGpnQzZOMVZvaURiZmYzVzNaSis0L0ZSVG1EaFEKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUR4akNDQXE2Z0F3SUJBZ0lSQVAzSnpQTU05cHI4U1p2QmJ5OHBqbU13RFFZSktvWklodmNOQVFFTEJRQXcKSFRFYk1Ca0dBMVVFQXhNU2JIVnRhV2R2TFhkbFltaHZiMnR6TFdOaE1CNFhEVEl6TURNd09ERTBORE0wTjFvWApEVEkwTURNd056RTBORE0wTjFvd0dqRVlNQllHQTFVRUF4TVBiSFZ0YVdkdkxXOXdaWEpoZEc5eU1JSUJJakFOCkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXdFUTZPQTRSMHNNU2FhSEhVTTl1eDRoOVZURmoKZUVqV29pbTU0bXRCY1RYcFdTdzA1TSs5RWdZTnA5MDNVbnhnMTlHY0dJR1c0WnlrUGRiVzZpM0JKNWN5RGQ4KwpsaWxnUHhvUG5Xb0xSK3dxYWpiVFlmSUYzV3ZSS0xDMUZYSHBxT3owWVBjeFkwWmZhVG5vdEN5WDF4T0MwUW9QCm9FbFk0MlROOVFnektBeDYvQ1J6aW82cHhHc0lCdVhYM1VTT0xKNUllRW9nVXQ1a0ZSY0RDeEs4WUVZZlhXRmQKQk9oY2JGWGdnY0xVKy82Ym15Zy9Ga09yUTVDRWZlYWhIWlZNS1NNUE9SWUxXVkFtU2FNSkFySGJaQUVFOUJVLwpma0MwUVJEdWdoMWZ1ZzNhWVZoYXdRbDg0L2VKMHBDQWpQY0k5eUYyWGl6OVQ1bVhIMDdLbDlKM0hRSURBUUFCCm80SUJBakNCL3pBT0JnTlZIUThCQWY4RUJBTUNCYUF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0cKQVFVRkJ3TUNNQXdHQTFVZEV3RUIvd1FDTUFBd0h3WURWUjBqQkJnd0ZvQVVuQUIyK2tuZEVoK1BXZW5NRjdYbAovdFZhSkRjd2daNEdBMVVkRVFTQmxqQ0JrNElrYkhWdGFXZHZMV3gxYldsbmJ5MXZjR1Z5WVhSdmNpNXNkVzFwCloyOHRjM2x6ZEdWdGdqQnNkVzFwWjI4dGJIVnRhV2R2TFc5d1pYSmhkRzl5TFhObGNuWnBZMlV1YkhWdGFXZHYKTFhONWMzUmxiUzV6ZG1PQ09XeDFiV2xuYnkxc2RXMXBaMjh0YjNCbGNtRjBiM0l0ZDJWaWFHOXZhM010YzJWeQpkbWxqWlM1c2RXMXBaMjh0YzNsemRHVnRMbk4yWXpBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQWJMM2RPK2ZqCnhqMnpNR1BVdXVnZG5oM2dVOVJZdzk0dnVQNnVwQXZPMWl2eEs3RUtpY1JpbVNIU3dWYU5NTDU3ZTdUSlJBSWwKbEJJY2NKY3AyUVpsekMwWElKRlYvV2NyZVBhTjd2N2tDaktmdDJhWWlVSnVnREtIaWl2Y2RramFLdFByWjVpQwpKeDBvdUtBbWFNdVNMQVJTSmZIaTlYYTRkd1hFdG1mMlV5MmE3OE9ybXdMaUJ0aEpkM2pxR1NCSEVKTGh4SE9xClNRL21WQjFnOXlYT3FsRGhRMTBEbGdnWnF6SXE3cVlpY0gzanM5aTFTamJkME51RFBEdWpOUTYreXJYZXFQUWUKb2pHdjJ5a2Y0eWhVdWNOWExHMUlBYlBVSXJJeHliTFE0L0Nma2JiQlhVdXBYZk94dEtXVko5Wkg4SXMrSmtNNwo1aTNaWDJ1dXJhNmpjQT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBd0VRNk9BNFIwc01TYWFISFVNOXV4NGg5VlRGamVFaldvaW01NG10QmNUWHBXU3cwCjVNKzlFZ1lOcDkwM1VueGcxOUdjR0lHVzRaeWtQZGJXNmkzQko1Y3lEZDgrbGlsZ1B4b1BuV29MUit3cWFqYlQKWWZJRjNXdlJLTEMxRlhIcHFPejBZUGN4WTBaZmFUbm90Q3lYMXhPQzBRb1BvRWxZNDJUTjlRZ3pLQXg2L0NSegppbzZweEdzSUJ1WFgzVVNPTEo1SWVFb2dVdDVrRlJjREN4SzhZRVlmWFdGZEJPaGNiRlhnZ2NMVSsvNmJteWcvCkZrT3JRNUNFZmVhaEhaVk1LU01QT1JZTFdWQW1TYU1KQXJIYlpBRUU5QlUvZmtDMFFSRHVnaDFmdWczYVlWaGEKd1FsODQvZUowcENBalBjSTl5RjJYaXo5VDVtWEgwN0tsOUozSFFJREFRQUJBb0lCQUhLOEJGWVJKMWV6cTFnMwovNTVjdXduOWpIVjdiSldLT2ZNNW5VRGRxb2JwbWgvcHZvTFE2VTVKS0hzRkN3K0JRN1ZtMDVUWU9IYllLRGJ5Cjd2dCtaR2JBMWxEcTZRbHBGWk55ZE9FR09FY3FTc0ZwaUVsSnlYQXg5L1lsUlZyUHlKVlRHaDZIUlFTdUtSKzkKTy8zUklxZHBjRVpZajZ5aU9KWXlRS201dy9WZ09xNUFPZnpnMGJLRDF4d3RCa0JkZzdsbWdkdW9VNDkwVnBTSgoxejE2OUNXQTNjTisva1h4NjZueGFqV2x2NWMvNEFBUEpiUVd6NEpzbFVGd212Z3EzSlcxQ1l1OG1TbHcyS0hDCnNIOGg3YUlwdGNqMUtwSnlqMDliU3VtNnc3bEZLRlBjUXZxNUF5Y1ZVU2IzSmp4VGZPN1o5TlpyVm1jMm1BK0gKTVc5bTA0RUNnWUVBK1NEdi9PTjFjVG03cHVscXEvK1lJcTJ1eEZyWTBWaktuTitxR1dkZ1k3TS9IbzRKbWlKdwpLV0JuSFh1c2d6TzloYURQUFRJQWljdzYvaDA0VVhGYjUwTUJLcUNuVkpvRG84OTM1RWhzVTJ2SU9mVEQ2QWxRCmlqRjlCbkZaR3F4dEdLaDRJN1JZK2ZlWUk5TjI5QzE5K25GNU9pY2c2R0poNUJGa3oxNGFRUDBDZ1lFQXhaSEwKVjhGK0V5MFRsY1VBSllwRXMzUlh6VnlNcm9CVGJlc0s3R0ZKeGVQRGFNNnU2NUxrRUZRYk1ab0pLdGtJM21yagppQVV2TE5rSGw3WDNscitsandZb0xvdC9QSE9oR0JqcVZPenlTOUhRdW1FMFBmYWhIbVBsbkFrcG5aSnNiUFhiCitYSnpYOWYrRXVWR1RQcndDQmt6VFkxckFQQk0rTFVlVW1ZTmVLRUNnWUJtQ0NoaUFXS0RLZXNCOUUwOC9tUjMKcDN5UmJNZXFEZHlGblZFVU1IT1l3YnZUTHNjZCtvYkhXM1UvN1B2OWpENU5zVXZQTzJCZkQyY0Yxai9QazBiWgprMmF4NTdSQWdRZUdtcHoyd1Bha3Y5cjBhWnVtdDlIbGwxa21QMXdJQWFCNDNkNitlTW1NTHV4L2w4YjdRSHA5CkRPWmllODROZnVXcXU3ajIrUXAxblFLQmdDcklsN0E1Um9RQWp1MHY3QWcxR1F1RGRrQVNlcVNQUllIWUZGVjcKKyszT2xOSnRiNU8wQzQ4OXAyWG1aWFhSNmduQU8rV0l1ZDZNWVFpSmIwUkYzQ1JNd1FiVFRvcFl2OW5vQzFhNAp1UCtTUUJFY1c2UFBkTFNRRFhqc3d3Wk1YdzU1YjFsbFgzYXgzMk5ZSXhFb2hqSTZ3dEZZZm9PRmhpV1ZreXRrCnppWUJBb0dBWEhJdkNJaWRuWExsWmNzblIvSjh3WVorenVvWDFnV1JrL0I0WDZscG5XclFCYW9mVFFPSjF3dUkKTkxVUnROVVlXZFNUcGMvVkRyQnQxRmduaTErNzN1NUtYM3QvL1FGeEd2Qkdnb3lROUc3SWcvSmQ3TVN1anBKcgpOWDhpK1ZVSHJ5eEU0VHoydXNqSE5XeVAzazBWNnV4NThHOThHS01OYWJvWmMzTElwYkU9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  labels:
    app.kubernetes.io/instance: lumigo
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: lumigo-operator
    app.kubernetes.io/version: "0"
    helm.sh/chart: lumigo-operator-0
  name: lumigo-lumigo-operator-lumigo-injector-webhook-certs
type: kubernetes.io/tls
---
# Source: lumigo-operator/templates/lumigo-crd.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.10.0
  labels:
    app.kubernetes.io/instance: lumigo
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: lumigo-operator
    app.kubernetes.io/version: "0"
    helm.sh/chart: lumigo-operator-0
  name: lumigoes.operator.lumigo.io
spec:
  group: operator.lumigo.io
  names:
    kind: Lumigo
    listKind: LumigoList
    plural: lumigoes
    singular: lumigo
  scope: Namespaced
  versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          description: Lumigo is the Schema for the lumigoes API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: LumigoSpec defines the desired state of Lumigo
              properties:
                infrastructure:
                  properties:
                    enabled:
                      description: Whether Kubernetes infrastructrure collection should be active. If unspecified, defaults to `true`
                      type: boolean
                    kubeEvents:
                      description: How to collect Kubernetes events and send them to Lumigo.
                      properties:
                        enabled:
                          description: Whether Kubernetes events should be collected and sent to Lumigo. If unspecified, defaults to `true`
                          type: boolean
                      type: object
                  type: object
                lumigoToken:
                  description: 'The Lumigo token to be used to authenticate against Lumigo. For info on how to retrieve your Lumigo token, refer to: https://docs.lumigo.io/docs/lumigo-tokens'
                  properties:
                    secretRef:
                      description: Reference to a Kubernetes secret that contains the credentials for Lumigo. The secret must be in the same namespace as the LumigoSpec referencing it.
                      properties:
                        key:
                          description: Key of the Kubernetes secret that contains the credential data.
                          type: string
                        name:
                          description: Name of a Kubernetes secret.
                          type: string
                      required:
                        - name
                      type: object
                  type: object
                tracing:
                  description: 'TracingSpec specified how distributed tracing (for example: tracer injection) should be set up by the operator'
                  properties:
                    injection:
                      properties:
                        enabled:
                          description: Whether Daemonsets, Deployments, ReplicaSets, StatefulSets, CronJobs and Jobs that are created or updated after the creation of the Lumigo resource be injected. If unspecified, defaults to `true`
                          type: boolean
                        injectLumigoIntoExistingResourcesOnCreation:
                          description: Whether Daemonsets, Deployments, ReplicaSets, StatefulSets, CronJobs and Jobs that already exist when the Lumigo resource is created, will be updated with injection. If unspecified, defaults to `true`. It requires `Enabled` to be set to `true`.
                          type: boolean
                        removeLumigoFromResourcesOnDeletion:
                          description: Whether Daemonsets, Deployments, ReplicaSets, StatefulSets, CronJobs and Jobs that are injected with Lumigo will be updated to remove the injection when the Lumigo resource is deleted. If unspecified, defaults to `true`. It requires `Enabled` to be set to `true`.
                          type: boolean
                      type: object
                  required:
                    - injection
                  type: object
              type: object
            status:
              description: LumigoStatus defines the observed state of Lumigo
              properties:
                conditions:
                  description: The status of single Lumigo resources
                  items:
                    properties:
                      lastTransitionTime:
                        format: date-time
                        type: string
                      lastUpdateTime:
                        format: date-time
                        type: string
                      message:
                        type: string
                      status:
                        type: string
                      type:
                        type: string
                    required:
                      - lastTransitionTime
                      - lastUpdateTime
                      - message
                      - status
                      - type
                    type: object
                  type: array
              required:
                - conditions
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
# Source: lumigo-operator/templates/service-account.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: lumigo
    app.kubernetes.io/instance: lumigo
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: lumigo-operator
    app.kubernetes.io/part-of: lumigo
    app.kubernetes.io/version: "0"
    helm.sh/chart: lumigo-operator-0
  name: lumigo-lumigo-operator-controller-manager
---
# Source: lumigo-operator/templates/leader-election-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: lumigo
    app.kubernetes.io/instance: lumigo
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: lumigo-operator
    app.kubernetes.io/part-of: lumigo
    app.kubernetes.io/version: "0"
    helm.sh/chart: lumigo-operator-0
  name: lumigo-lumigo-operator-leader-election-role
rules:
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
      - delete
  - apiGroups:
      - coordination.k8s.io
    resources:
      - leases
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
      - delete
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - create
      - patch
---
# Source: lumigo-operator/templates/manager-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/instance: lumigo
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: lumigo-operator
    app.kubernetes.io/version: "0"
    helm.sh/chart: lumigo-operator-0
  name: lumigo-lumigo-operator-manager-role
rules:
  - apiGroups:
      - operator.lumigo.io
    resources:
      - lumigoes
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - operator.lumigo.io
    resources:
      - lumigoes/finalizers
    verbs:
      - update
  - apiGroups:
      - operator.lumigo.io
    resources:
      - lumigoes/status
    verbs:
      - get
      - patch
      - update
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - create
      - get
      - list
      - update
      - watch
  - apiGroups:
      - ""
    resources:
      - namespaces
      - namespaces/status
      - nodes
      - nodes/spec
      - pods
      - pods/status
      - replicationcontrollers
      - replicationcontrollers/status
      - resourcequotas
      - secrets
      - services
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - apps
    resources:
      - daemonsets
      - deployments
      - replicasets
      - statefulsets
    verbs:
      - get
      - list
      - watch
      - update
  - apiGroups:
      - batch
    resources:
      - cronjobs
      - jobs
    verbs:
      - get
      - list
      - watch
      - update
---
# Source: lumigo-operator/templates/metrics-reader-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: kube-rbac-proxy
    app.kubernetes.io/created-by: lumigo
    app.kubernetes.io/instance: lumigo
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: lumigo-operator
    app.kubernetes.io/part-of: lumigo
    app.kubernetes.io/version: "0"
    helm.sh/chart: lumigo-operator-0
  name: lumigo-lumigo-operator-metrics-reader
rules:
  - nonResourceURLs:
      - /metrics
    verbs:
      - get
---
# Source: lumigo-operator/templates/proxy-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: kube-rbac-proxy
    app.kubernetes.io/created-by: lumigo
    app.kubernetes.io/instance: lumigo
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: lumigo-operator
    app.kubernetes.io/part-of: lumigo
    app.kubernetes.io/version: "0"
    helm.sh/chart: lumigo-operator-0
  name: lumigo-lumigo-operator-proxy-role
rules:
  - apiGroups:
      - authentication.k8s.io
    resources:
      - tokenreviews
    verbs:
      - create
  - apiGroups:
      - authorization.k8s.io
    resources:
      - subjectaccessreviews
    verbs:
      - create
---
# Source: lumigo-operator/templates/leader-election-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: lumigo
    app.kubernetes.io/instance: lumigo
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: lumigo-operator
    app.kubernetes.io/part-of: lumigo
    app.kubernetes.io/version: "0"
    helm.sh/chart: lumigo-operator-0
  name: lumigo-lumigo-operator-leader-election-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: lumigo-lumigo-operator-leader-election-role
subjects:
  - kind: ServiceAccount
    name: lumigo-lumigo-operator-controller-manager
    namespace: lumigo-system
---
# Source: lumigo-operator/templates/manager-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: lumigo
    app.kubernetes.io/instance: lumigo
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: lumigo-operator
    app.kubernetes.io/part-of: lumigo
    app.kubernetes.io/version: "0"
    helm.sh/chart: lumigo-operator-0
  name: lumigo-lumigo-operator-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: lumigo-lumigo-operator-manager-role
subjects:
  - kind: ServiceAccount
    name: lumigo-lumigo-operator-controller-manager
    namespace: lumigo-system
---
# Source: lumigo-operator/templates/proxy-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/component: kube-rbac-proxy
    app.kubernetes.io/created-by: lumigo
    app.kubernetes.io/instance: lumigo
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: lumigo-operator
    app.kubernetes.io/part-of: lumigo
    app.kubernetes.io/version: "0"
    helm.sh/chart: lumigo-operator-0
  name: lumigo-lumigo-operator-proxy-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: lumigo-lumigo-operator-proxy-role
subjects:
  - kind: ServiceAccount
    name: lumigo-lumigo-operator-controller-manager
    namespace: lumigo-system
---
# Source: lumigo-operator/templates/metrics-service.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: kube-rbac-proxy
    app.kubernetes.io/created-by: lumigo
    app.kubernetes.io/instance: lumigo
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: lumigo-operator
    app.kubernetes.io/part-of: lumigo
    app.kubernetes.io/version: "0"
    control-plane: controller-manager
    helm.sh/chart: lumigo-operator-0
  name: lumigo-lumigo-operator-controller-manager-metrics-service
spec:
  ports:
    - name: https
      port: 8443
      protocol: TCP
      targetPort: https
  selector:
    app.kubernetes.io/instance: lumigo
    app.kubernetes.io/name: lumigo-operator
    control-plane: controller-manager
  type: ClusterIP
---
# Source: lumigo-operator/templates/telemetry-proxy-service.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: telemetry-proxy
    app.kubernetes.io/created-by: lumigo
    app.kubernetes.io/instance: lumigo
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: lumigo-operator
    app.kubernetes.io/part-of: lumigo
    app.kubernetes.io/version: "0"
    control-plane: controller-manager
    helm.sh/chart: lumigo-operator-0
  name: lumigo-lumigo-operator-telemetry-proxy-service
spec:
  ports:
    - name: otlphttp
      # TODO Can we use generated certificates to make it HTTPS?
      # If we used self-signed certs, how would we pass the CA to OTLP exporters in client apps?
      port: 80
      protocol: TCP
      targetPort: otlphttp
  selector:
    app.kubernetes.io/instance: lumigo
    app.kubernetes.io/name: lumigo-operator
    control-plane: controller-manager
  type: ClusterIP
---
# Source: lumigo-operator/templates/controller-deployment-and-webhooks.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: lumigo
    app.kubernetes.io/created-by: lumigo
    app.kubernetes.io/instance: lumigo
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: lumigo-operator
    app.kubernetes.io/part-of: lumigo
    app.kubernetes.io/version: "0"
    helm.sh/chart: lumigo-operator-0
  name: lumigo-lumigo-operator-webhooks-service
spec:
  ports:
    - port: 443
      protocol: TCP
      targetPort: 9443
  selector:
    app.kubernetes.io/instance: lumigo
    app.kubernetes.io/name: lumigo-operator
    control-plane: controller-manager
    lumigo.cert-digest: dJTiBDRVJUSUZJQ
  type: ClusterIP
---
# Source: lumigo-operator/templates/controller-deployment-and-webhooks.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: manager
    app.kubernetes.io/created-by: lumigo
    app.kubernetes.io/instance: lumigo
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: lumigo-operator
    app.kubernetes.io/part-of: lumigo
    app.kubernetes.io/version: "0"
    control-plane: controller-manager
    helm.sh/chart: lumigo-operator-0
    lumigo.auto-trace: "false" # We do not need the operator to inject itself
  name: lumigo-lumigo-operator-controller-manager
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: lumigo
      app.kubernetes.io/name: lumigo-operator
      control-plane: controller-manager
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        app.kubernetes.io/instance: lumigo
        app.kubernetes.io/name: lumigo-operator
        control-plane: controller-manager
        lumigo.auto-trace: "false" # We do not need the operator to inject itself
        lumigo.cert-digest: dJTiBDRVJUSUZJQ
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: kubernetes.io/arch
                    operator: In
                    values:
                      - amd64
                      - arm64
                  - key: kubernetes.io/os
                    operator: In
                    values:
                      - linux
      containers:
        - args:
            - --health-probe-bind-address=:8081
            - --metrics-bind-address=127.0.0.1:8080
            - --leader-elect
          command:
            - /manager
          env:
            - name: LUMIGO_CONTROLLER_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: LUMIGO_CONTROLLER_POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: TELEMETRY_PROXY_OTLP_SERVICE
              value: http://lumigo-lumigo-operator-telemetry-proxy-service.lumigo-system.svc.cluster.local
            - name: LUMIGO_OPERATOR_VERSION
              value: latest
            - name: LUMIGO_INJECTOR_IMAGE
              value: public.ecr.aws/lumigo/lumigo-autotrace:latest
            - name: LUMIGO_NAMESPACE_CONFIGURATIONS
              value: /lumigo/etc/namespaces/namespaces_to_monitor.json
            - name: KUBERNETES_CLUSTER_DOMAIN
              value: cluster.local
          image: host.docker.internal:5000/controller:latest
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8081
            initialDelaySeconds: 15
            periodSeconds: 20
          name: manager
          ports:
            - containerPort: 9443
              name: webhook-server
              protocol: TCP
          readinessProbe:
            httpGet:
              path: /readyz
              port: 8081
            initialDelaySeconds: 5
            periodSeconds: 10
          resources:
            limits:
              cpu: 500m
              memory: 128Mi
            requests:
              cpu: 10m
              memory: 64Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 1234
          volumeMounts:
            - mountPath: /tmp/k8s-webhook-server/serving-certs
              name: cert
              readOnly: true
            - mountPath: /lumigo/etc/namespaces/
              name: namespace-configurations
              readOnly: false
        - args:
            - --secure-listen-address=0.0.0.0:8443
            - --upstream=http://127.0.0.1:8080/
            - --logtostderr=true
            - --v=0
          env:
            - name: KUBERNETES_CLUSTER_DOMAIN
              value: cluster.local
          image: gcr.io/kubebuilder/kube-rbac-proxy:v0.13.0
          name: kube-rbac-proxy
          ports:
            - containerPort: 8443
              name: https
              protocol: TCP
          resources:
            limits:
              cpu: 500m
              memory: 128Mi
            requests:
              cpu: 5m
              memory: 64Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
        - env:
            - name: LUMIGO_ENDPOINT
              value: https://ga-otlp.lumigo-tracer-edge.golumigo.com
            - mountPath: /lumigo/etc/namespaces/
              name: namespace-configurations
              readOnly: false
          image: host.docker.internal:5000/telemetry-proxy:latest
          name: telemetry-proxy
          ports:
            - containerPort: 4318
              name: otlphttp
              protocol: TCP
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 1234
          volumeMounts:
            - mountPath: /lumigo/etc/otelcol/
              name: telemetry-proxy-configurations
              readOnly: false
            - mountPath: /lumigo/etc/namespaces/
              name: namespace-configurations
              readOnly: false
      securityContext:
        fsGroup: 1234
        runAsNonRoot: true
      serviceAccountName: lumigo-lumigo-operator-controller-manager
      terminationGracePeriodSeconds: 10
      volumes:
        - name: cert
          secret:
            defaultMode: 420
            secretName: lumigo-lumigo-operator-lumigo-injector-webhook-certs
        - emptyDir: {}
          name: namespace-configurations
        - emptyDir: {}
          name: telemetry-proxy-configurations
---
# Source: lumigo-operator/templates/controller-deployment-and-webhooks.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  labels:
    app.kubernetes.io/instance: lumigo
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: lumigo-operator
    app.kubernetes.io/version: "0"
    helm.sh/chart: lumigo-operator-0
  name: lumigo-lumigo-operator-defaulter-webhook-configuration
webhooks:
  - admissionReviewVersions:
      - v1
      - v1beta1
    clientConfig:
      caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURKakNDQWc2Z0F3SUJBZ0lSQU5mYVAvTHdnTjVlTnAwU3VhQ3RDM2t3RFFZSktvWklodmNOQVFFTEJRQXcKSFRFYk1Ca0dBMVVFQXhNU2JIVnRhV2R2TFhkbFltaHZiMnR6TFdOaE1CNFhEVEl6TURNd09ERTBORE0wTjFvWApEVEkwTURNd056RTBORE0wTjFvd0hURWJNQmtHQTFVRUF4TVNiSFZ0YVdkdkxYZGxZbWh2YjJ0ekxXTmhNSUlCCklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUF1OWdRcnMvVmNUTHY2dTExTzJxM09pSzMKVFNsbHVwVWUraUErWXEzVE1Ib3ZvNjYrbGdwVzUvNi9EMzhuUUswSXlYSlN1MUhSZU1zamxrY3JSd1JNaWhKQgprclBOMWRPS0FUTER5RS80SGJxVmFmdUdCZjllWEk5cHFvSVZpQTZ6QnpEaW80NlVMc0tCdEkxK2UxMVNGeGl2CmZ5bWZpT2FVR29DRVJuQ0pJL0tSM1kzVVZGTHFwYVFLT1hKSnlvYUEwbU95TXUrRUl0VVhWT1hrdkdvbGRVcXoKbjFtSFY3N1duQnVLVUxiUXF6MDFESHJuQWRhY3Y4S2ZwRUFWQ2MzM24vNjZIQmZGS0pxV2pvamlJVjJ3OWNjagpnTFJSUVp5b2JsRCs2aTBvdHNlcmtPdy9UMXJZVWJPMHhucWR1SlJOQ0VMbzlUeWh4Vld0TndCNlAvRGpnUUlECkFRQUJvMkV3WHpBT0JnTlZIUThCQWY4RUJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0cKQVFVRkJ3TUNNQThHQTFVZEV3RUIvd1FGTUFNQkFmOHdIUVlEVlIwT0JCWUVGSndBZHZwSjNSSWZqMW5wekJlMQo1ZjdWV2lRM01BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQ2NPVlhOTTJHS3h1OXlZcVRHdWFjcFN1UXRhN0QrCm1INm1rNHlPN1ZRSTRQdmRNZHQzMDArNjhhaWtmS0tUckpveWY0WjI1UDNHeThlcXlyamVmQnNhZjVYVmtoQkcKU2tQNzRXQkpDR0ZyRkZONG80WnFXdUMyK25OZHVFSWdJU3lZdHdFRHhHMkdpdlpwdURqRFZMT2VxL21UQ29jbQpZaVhvTGZHOFk1RzZsbmU3QkRFNGk0NkJ2Sjd6Z2NDMjBXMWxReFFBQVltNjRLdkdSTmhtOEo2SVhlNm5QdnVDCkt0MkJVdmcyUC96QWVYQ1J4TFU2REdPSmxXWmJ0QnNqMDVNcXAxaUxYQlJSVHlsdStKOXNoR0pYOU5BUXYrY1IKekdwc0FETjArM1o4V1RPQWE4SFllcFU2SitreGpnQzZOMVZvaURiZmYzVzNaSis0L0ZSVG1EaFEKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
      service:
        name: lumigo-lumigo-operator-webhooks-service
        namespace: lumigo-system
        path: /v1alpha1/mutate
    failurePolicy: Fail
    name: lumigodefaulter.kb.io
    rules:
      - apiGroups:
          - operator.lumigo.io
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - lumigoes
    sideEffects: None
    timeoutSeconds: 5
---
# Source: lumigo-operator/templates/controller-deployment-and-webhooks.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  labels:
    app.kubernetes.io/instance: lumigo
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: lumigo-operator
    app.kubernetes.io/version: "0"
    helm.sh/chart: lumigo-operator-0
  name: lumigo-lumigo-operator-injector-webhook-configuration
webhooks:
  - admissionReviewVersions:
      - v1
      - v1beta1
    clientConfig:
      caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURKakNDQWc2Z0F3SUJBZ0lSQU5mYVAvTHdnTjVlTnAwU3VhQ3RDM2t3RFFZSktvWklodmNOQVFFTEJRQXcKSFRFYk1Ca0dBMVVFQXhNU2JIVnRhV2R2TFhkbFltaHZiMnR6TFdOaE1CNFhEVEl6TURNd09ERTBORE0wTjFvWApEVEkwTURNd056RTBORE0wTjFvd0hURWJNQmtHQTFVRUF4TVNiSFZ0YVdkdkxYZGxZbWh2YjJ0ekxXTmhNSUlCCklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUF1OWdRcnMvVmNUTHY2dTExTzJxM09pSzMKVFNsbHVwVWUraUErWXEzVE1Ib3ZvNjYrbGdwVzUvNi9EMzhuUUswSXlYSlN1MUhSZU1zamxrY3JSd1JNaWhKQgprclBOMWRPS0FUTER5RS80SGJxVmFmdUdCZjllWEk5cHFvSVZpQTZ6QnpEaW80NlVMc0tCdEkxK2UxMVNGeGl2CmZ5bWZpT2FVR29DRVJuQ0pJL0tSM1kzVVZGTHFwYVFLT1hKSnlvYUEwbU95TXUrRUl0VVhWT1hrdkdvbGRVcXoKbjFtSFY3N1duQnVLVUxiUXF6MDFESHJuQWRhY3Y4S2ZwRUFWQ2MzM24vNjZIQmZGS0pxV2pvamlJVjJ3OWNjagpnTFJSUVp5b2JsRCs2aTBvdHNlcmtPdy9UMXJZVWJPMHhucWR1SlJOQ0VMbzlUeWh4Vld0TndCNlAvRGpnUUlECkFRQUJvMkV3WHpBT0JnTlZIUThCQWY4RUJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0cKQVFVRkJ3TUNNQThHQTFVZEV3RUIvd1FGTUFNQkFmOHdIUVlEVlIwT0JCWUVGSndBZHZwSjNSSWZqMW5wekJlMQo1ZjdWV2lRM01BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQ2NPVlhOTTJHS3h1OXlZcVRHdWFjcFN1UXRhN0QrCm1INm1rNHlPN1ZRSTRQdmRNZHQzMDArNjhhaWtmS0tUckpveWY0WjI1UDNHeThlcXlyamVmQnNhZjVYVmtoQkcKU2tQNzRXQkpDR0ZyRkZONG80WnFXdUMyK25OZHVFSWdJU3lZdHdFRHhHMkdpdlpwdURqRFZMT2VxL21UQ29jbQpZaVhvTGZHOFk1RzZsbmU3QkRFNGk0NkJ2Sjd6Z2NDMjBXMWxReFFBQVltNjRLdkdSTmhtOEo2SVhlNm5QdnVDCkt0MkJVdmcyUC96QWVYQ1J4TFU2REdPSmxXWmJ0QnNqMDVNcXAxaUxYQlJSVHlsdStKOXNoR0pYOU5BUXYrY1IKekdwc0FETjArM1o4V1RPQWE4SFllcFU2SitreGpnQzZOMVZvaURiZmYzVzNaSis0L0ZSVG1EaFEKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
      service:
        name: lumigo-lumigo-operator-webhooks-service
        namespace: lumigo-system
        path: /v1alpha1/inject
    failurePolicy: Ignore
    name: lumigoinjector.kb.io
    rules:
      - apiGroups:
          - apps
        apiVersions:
          - v1
        operations:
          - CREATE
          - UPDATE
        resources:
          - daemonsets
          - deployments
          - replicasets
          - statefulsets
      - apiGroups:
          - batch
        apiVersions:
          - v1
        operations:
          - CREATE
          - UPDATE
        resources:
          - cronjobs
          - jobs
    sideEffects: None
    timeoutSeconds: 5
