---
apiVersion: v1
kind: Namespace
metadata:
  creationTimestamp: "2023-03-02T15:12:37Z"
  labels:
    kubernetes.io/metadata.name: lumigo-system
    name: lumigo-system
  name: lumigo-system
  resourceVersion: "670"
  uid: 80ce53d3-3317-4903-972f-fc9dd310d2ae
spec:
  finalizers:
    - kubernetes
status:
  phase: Active
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    cert-manager.io/inject-ca-from: lumigo-system/lumigo-serving-cert
    controller-gen.kubebuilder.io/version: v0.10.0
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"apiextensions.k8s.io/v1","kind":"CustomResourceDefinition","metadata":{"annotations":{"cert-manager.io/inject-ca-from":"lumigo-system/lumigo-serving-cert","controller-gen.kubebuilder.io/version":"v0.10.0"},"name":"lumigoes.operator.lumigo.io"},"spec":{"group":"operator.lumigo.io","names":{"kind":"Lumigo","listKind":"LumigoList","plural":"lumigoes","singular":"lumigo"},"scope":"Namespaced","versions":[{"name":"v1alpha1","schema":{"openAPIV3Schema":{"description":"Lumigo is the Schema for the lumigoes API","properties":{"apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources","type":"string"},"kind":{"description":"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"metadata":{"type":"object"},"spec":{"description":"LumigoSpec defines the desired state of Lumigo","properties":{"infrastructure":{"properties":{"enabled":{"description":"Whether Kubernetes infrastructrure collection should be active. If unspecified, defaults to `true`","type":"boolean"},"kubeEvents":{"description":"How to collect Kubernetes events and send them to Lumigo.","properties":{"enabled":{"description":"Whether Kubernetes events should be collected and sent to Lumigo. If unspecified, defaults to `true`","type":"boolean"}},"type":"object"}},"type":"object"},"lumigoToken":{"description":"The Lumigo token to be used to authenticate against Lumigo. For info on how to retrieve your Lumigo token, refer to: https://docs.lumigo.io/docs/lumigo-tokens","properties":{"secretRef":{"description":"Reference to a Kubernetes secret that contains the credentials for Lumigo. The secret must be in the same namespace as the LumigoSpec referencing it.","properties":{"key":{"description":"Key of the Kubernetes secret that contains the credential data.","type":"string"},"name":{"description":"Name of a Kubernetes secret.","type":"string"}},"required":["name"],"type":"object"}},"type":"object"},"tracing":{"description":"TracingSpec specified how distributed tracing (for example: tracer injection) should be set up by the operator","properties":{"injection":{"properties":{"enabled":{"description":"Whether Daemonsets, Deployments, ReplicaSets, StatefulSets, CronJobs and Jobs that are created or updated after the creation of the Lumigo resource be injected. If unspecified, defaults to `true`","type":"boolean"},"injectLumigoIntoExistingResourcesOnCreation":{"description":"Whether Daemonsets, Deployments, ReplicaSets, StatefulSets, CronJobs and Jobs that already exist when the Lumigo resource is created, will be updated with injection. If unspecified, defaults to `true`. It requires `Enabled` to be set to `true`.","type":"boolean"},"removeLumigoFromResourcesOnDeletion":{"description":"Whether Daemonsets, Deployments, ReplicaSets, StatefulSets, CronJobs and Jobs that are injected with Lumigo will be updated to remove the injection when the Lumigo resource is deleted. If unspecified, defaults to `true`. It requires `Enabled` to be set to `true`.","type":"boolean"}},"type":"object"}},"required":["injection"],"type":"object"}},"type":"object"},"status":{"description":"LumigoStatus defines the observed state of Lumigo","properties":{"conditions":{"description":"The status of single Lumigo resources","items":{"properties":{"lastTransitionTime":{"format":"date-time","type":"string"},"lastUpdateTime":{"format":"date-time","type":"string"},"message":{"type":"string"},"status":{"type":"string"},"type":{"type":"string"}},"required":["lastTransitionTime","lastUpdateTime","message","status","type"],"type":"object"},"type":"array"}},"required":["conditions"],"type":"object"}},"type":"object"}},"served":true,"storage":true,"subresources":{"status":{}}}]}}
  name: lumigoes.operator.lumigo.io
spec:
  group: operator.lumigo.io
  names:
    kind: Lumigo
    listKind: LumigoList
    plural: lumigoes
    singular: lumigo
  scope: Namespaced
  versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          description: Lumigo is the Schema for the lumigoes API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: LumigoSpec defines the desired state of Lumigo
              properties:
                infrastructure:
                  properties:
                    enabled:
                      description: Whether Kubernetes infrastructrure collection should be active. If unspecified, defaults to `true`
                      type: boolean
                    kubeEvents:
                      description: How to collect Kubernetes events and send them to Lumigo.
                      properties:
                        enabled:
                          description: Whether Kubernetes events should be collected and sent to Lumigo. If unspecified, defaults to `true`
                          type: boolean
                      type: object
                  type: object
                lumigoToken:
                  description: 'The Lumigo token to be used to authenticate against Lumigo. For info on how to retrieve your Lumigo token, refer to: https://docs.lumigo.io/docs/lumigo-tokens'
                  properties:
                    secretRef:
                      description: Reference to a Kubernetes secret that contains the credentials for Lumigo. The secret must be in the same namespace as the LumigoSpec referencing it.
                      properties:
                        key:
                          description: Key of the Kubernetes secret that contains the credential data.
                          type: string
                        name:
                          description: Name of a Kubernetes secret.
                          type: string
                      required:
                        - name
                      type: object
                  type: object
                tracing:
                  description: 'TracingSpec specified how distributed tracing (for example: tracer injection) should be set up by the operator'
                  properties:
                    injection:
                      properties:
                        enabled:
                          description: Whether Daemonsets, Deployments, ReplicaSets, StatefulSets, CronJobs and Jobs that are created or updated after the creation of the Lumigo resource be injected. If unspecified, defaults to `true`
                          type: boolean
                        injectLumigoIntoExistingResourcesOnCreation:
                          description: Whether Daemonsets, Deployments, ReplicaSets, StatefulSets, CronJobs and Jobs that already exist when the Lumigo resource is created, will be updated with injection. If unspecified, defaults to `true`. It requires `Enabled` to be set to `true`.
                          type: boolean
                        removeLumigoFromResourcesOnDeletion:
                          description: Whether Daemonsets, Deployments, ReplicaSets, StatefulSets, CronJobs and Jobs that are injected with Lumigo will be updated to remove the injection when the Lumigo resource is deleted. If unspecified, defaults to `true`. It requires `Enabled` to be set to `true`.
                          type: boolean
                      type: object
                  required:
                    - injection
                  type: object
              type: object
            status:
              description: LumigoStatus defines the observed state of Lumigo
              properties:
                conditions:
                  description: The status of single Lumigo resources
                  items:
                    properties:
                      lastTransitionTime:
                        format: date-time
                        type: string
                      lastUpdateTime:
                        format: date-time
                        type: string
                      message:
                        type: string
                      status:
                        type: string
                      type:
                        type: string
                    required:
                      - lastTransitionTime
                      - lastUpdateTime
                      - message
                      - status
                      - type
                    type: object
                  type: array
              required:
                - conditions
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"v1","kind":"ServiceAccount","metadata":{"annotations":{},"labels":{"app.kubernetes.io/component":"rbac","app.kubernetes.io/created-by":"lumigo","app.kubernetes.io/instance":"controller-manager","app.kubernetes.io/managed-by":"kustomize","app.kubernetes.io/name":"serviceaccount","app.kubernetes.io/part-of":"lumigo"},"name":"lumigo-controller-manager","namespace":"lumigo-system"}}
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: lumigo
    app.kubernetes.io/instance: controller-manager
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: serviceaccount
    app.kubernetes.io/part-of: lumigo
  name: lumigo-controller-manager
  namespace: lumigo-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"rbac.authorization.k8s.io/v1","kind":"Role","metadata":{"annotations":{},"labels":{"app.kubernetes.io/component":"rbac","app.kubernetes.io/created-by":"lumigo","app.kubernetes.io/instance":"leader-election-role","app.kubernetes.io/managed-by":"kustomize","app.kubernetes.io/name":"role","app.kubernetes.io/part-of":"lumigo"},"name":"lumigo-leader-election-role","namespace":"lumigo-system"},"rules":[{"apiGroups":[""],"resources":["configmaps"],"verbs":["get","list","watch","create","update","patch","delete"]},{"apiGroups":["coordination.k8s.io"],"resources":["leases"],"verbs":["get","list","watch","create","update","patch","delete"]},{"apiGroups":[""],"resources":["events"],"verbs":["create","patch"]}]}
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: lumigo
    app.kubernetes.io/instance: leader-election-role
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: role
    app.kubernetes.io/part-of: lumigo
  name: lumigo-leader-election-role
  namespace: lumigo-system
rules:
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
      - delete
  - apiGroups:
      - coordination.k8s.io
    resources:
      - leases
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
      - delete
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - create
      - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"rbac.authorization.k8s.io/v1","kind":"ClusterRole","metadata":{"annotations":{},"creationTimestamp":null,"name":"lumigo-manager-role"},"rules":[{"apiGroups":["operator.lumigo.io"],"resources":["lumigoes"],"verbs":["create","delete","get","list","patch","update","watch"]},{"apiGroups":["operator.lumigo.io"],"resources":["lumigoes/finalizers"],"verbs":["update"]},{"apiGroups":["operator.lumigo.io"],"resources":["lumigoes/status"],"verbs":["get","patch","update"]},{"apiGroups":[""],"resources":["events"],"verbs":["create","get","list","update","watch"]},{"apiGroups":[""],"resources":["namespaces","namespaces/status","nodes","nodes/spec","pods","pods/status","replicationcontrollers","replicationcontrollers/status","resourcequotas","secrets","services"],"verbs":["get","list","watch"]},{"apiGroups":["apps"],"resources":["daemonsets","deployments","replicasets","statefulsets"],"verbs":["get","list","watch","update"]},{"apiGroups":["batch"],"resources":["cronjobs","jobs"],"verbs":["get","list","watch","update"]}]}
  creationTimestamp: null
  name: lumigo-manager-role
rules:
  - apiGroups:
      - operator.lumigo.io
    resources:
      - lumigoes
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - operator.lumigo.io
    resources:
      - lumigoes/finalizers
    verbs:
      - update
  - apiGroups:
      - operator.lumigo.io
    resources:
      - lumigoes/status
    verbs:
      - get
      - patch
      - update
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - create
      - get
      - list
      - update
      - watch
  - apiGroups:
      - ""
    resources:
      - namespaces
      - namespaces/status
      - nodes
      - nodes/spec
      - pods
      - pods/status
      - replicationcontrollers
      - replicationcontrollers/status
      - resourcequotas
      - secrets
      - services
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - apps
    resources:
      - daemonsets
      - deployments
      - replicasets
      - statefulsets
    verbs:
      - get
      - list
      - watch
      - update
  - apiGroups:
      - batch
    resources:
      - cronjobs
      - jobs
    verbs:
      - get
      - list
      - watch
      - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"rbac.authorization.k8s.io/v1","kind":"ClusterRole","metadata":{"annotations":{},"labels":{"app.kubernetes.io/component":"kube-rbac-proxy","app.kubernetes.io/created-by":"lumigo","app.kubernetes.io/instance":"metrics-reader","app.kubernetes.io/managed-by":"kustomize","app.kubernetes.io/name":"clusterrole","app.kubernetes.io/part-of":"lumigo"},"name":"lumigo-metrics-reader"},"rules":[{"nonResourceURLs":["/metrics"],"verbs":["get"]}]}
  labels:
    app.kubernetes.io/component: kube-rbac-proxy
    app.kubernetes.io/created-by: lumigo
    app.kubernetes.io/instance: metrics-reader
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrole
    app.kubernetes.io/part-of: lumigo
  name: lumigo-metrics-reader
rules:
  - nonResourceURLs:
      - /metrics
    verbs:
      - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"rbac.authorization.k8s.io/v1","kind":"ClusterRole","metadata":{"annotations":{},"labels":{"app.kubernetes.io/component":"kube-rbac-proxy","app.kubernetes.io/created-by":"lumigo","app.kubernetes.io/instance":"proxy-role","app.kubernetes.io/managed-by":"kustomize","app.kubernetes.io/name":"clusterrole","app.kubernetes.io/part-of":"lumigo"},"name":"lumigo-proxy-role"},"rules":[{"apiGroups":["authentication.k8s.io"],"resources":["tokenreviews"],"verbs":["create"]},{"apiGroups":["authorization.k8s.io"],"resources":["subjectaccessreviews"],"verbs":["create"]}]}
  labels:
    app.kubernetes.io/component: kube-rbac-proxy
    app.kubernetes.io/created-by: lumigo
    app.kubernetes.io/instance: proxy-role
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrole
    app.kubernetes.io/part-of: lumigo
  name: lumigo-proxy-role
rules:
  - apiGroups:
      - authentication.k8s.io
    resources:
      - tokenreviews
    verbs:
      - create
  - apiGroups:
      - authorization.k8s.io
    resources:
      - subjectaccessreviews
    verbs:
      - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"rbac.authorization.k8s.io/v1","kind":"RoleBinding","metadata":{"annotations":{},"labels":{"app.kubernetes.io/component":"rbac","app.kubernetes.io/created-by":"lumigo","app.kubernetes.io/instance":"leader-election-rolebinding","app.kubernetes.io/managed-by":"kustomize","app.kubernetes.io/name":"rolebinding","app.kubernetes.io/part-of":"lumigo"},"name":"lumigo-leader-election-rolebinding","namespace":"lumigo-system"},"roleRef":{"apiGroup":"rbac.authorization.k8s.io","kind":"Role","name":"lumigo-leader-election-role"},"subjects":[{"kind":"ServiceAccount","name":"lumigo-controller-manager","namespace":"lumigo-system"}]}
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: lumigo
    app.kubernetes.io/instance: leader-election-rolebinding
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: rolebinding
    app.kubernetes.io/part-of: lumigo
  name: lumigo-leader-election-rolebinding
  namespace: lumigo-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: lumigo-leader-election-role
subjects:
  - kind: ServiceAccount
    name: lumigo-controller-manager
    namespace: lumigo-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"rbac.authorization.k8s.io/v1","kind":"ClusterRoleBinding","metadata":{"annotations":{},"labels":{"app.kubernetes.io/component":"rbac","app.kubernetes.io/created-by":"lumigo","app.kubernetes.io/instance":"manager-rolebinding","app.kubernetes.io/managed-by":"kustomize","app.kubernetes.io/name":"clusterrolebinding","app.kubernetes.io/part-of":"lumigo"},"name":"lumigo-manager-rolebinding"},"roleRef":{"apiGroup":"rbac.authorization.k8s.io","kind":"ClusterRole","name":"lumigo-manager-role"},"subjects":[{"kind":"ServiceAccount","name":"lumigo-controller-manager","namespace":"lumigo-system"}]}
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: lumigo
    app.kubernetes.io/instance: manager-rolebinding
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrolebinding
    app.kubernetes.io/part-of: lumigo
  name: lumigo-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: lumigo-manager-role
subjects:
  - kind: ServiceAccount
    name: lumigo-controller-manager
    namespace: lumigo-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"rbac.authorization.k8s.io/v1","kind":"ClusterRoleBinding","metadata":{"annotations":{},"labels":{"app.kubernetes.io/component":"kube-rbac-proxy","app.kubernetes.io/created-by":"lumigo","app.kubernetes.io/instance":"proxy-rolebinding","app.kubernetes.io/managed-by":"kustomize","app.kubernetes.io/name":"clusterrolebinding","app.kubernetes.io/part-of":"lumigo"},"name":"lumigo-proxy-rolebinding"},"roleRef":{"apiGroup":"rbac.authorization.k8s.io","kind":"ClusterRole","name":"lumigo-proxy-role"},"subjects":[{"kind":"ServiceAccount","name":"lumigo-controller-manager","namespace":"lumigo-system"}]}
  labels:
    app.kubernetes.io/component: kube-rbac-proxy
    app.kubernetes.io/created-by: lumigo
    app.kubernetes.io/instance: proxy-rolebinding
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrolebinding
    app.kubernetes.io/part-of: lumigo
  name: lumigo-proxy-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: lumigo-proxy-role
subjects:
  - kind: ServiceAccount
    name: lumigo-controller-manager
    namespace: lumigo-system
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"app.kubernetes.io/component":"kube-rbac-proxy","app.kubernetes.io/created-by":"lumigo","app.kubernetes.io/instance":"controller-manager-metrics-service","app.kubernetes.io/managed-by":"kustomize","app.kubernetes.io/name":"service","app.kubernetes.io/part-of":"lumigo","control-plane":"controller-manager"},"name":"lumigo-controller-manager-metrics-service","namespace":"lumigo-system"},"spec":{"ports":[{"name":"https","port":8443,"protocol":"TCP","targetPort":"https"}],"selector":{"control-plane":"controller-manager"}}}
  labels:
    app.kubernetes.io/component: kube-rbac-proxy
    app.kubernetes.io/created-by: lumigo
    app.kubernetes.io/instance: controller-manager-metrics-service
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: service
    app.kubernetes.io/part-of: lumigo
    control-plane: controller-manager
  name: lumigo-controller-manager-metrics-service
  namespace: lumigo-system
spec:
  ports:
    - name: https
      port: 9443
      protocol: TCP
      targetPort: https
  selector:
    control-plane: controller-manager
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"app.kubernetes.io/component":"telemetry-proxy","app.kubernetes.io/created-by":"lumigo","app.kubernetes.io/instance":"telemetry-proxy-service","app.kubernetes.io/name":"telemetry-proxy-service","app.kubernetes.io/part-of":"lumigo"},"name":"lumigo-telemetry-proxy-service","namespace":"lumigo-system"},"spec":{"ports":[{"name":"otlphttp","port":80,"protocol":"TCP","targetPort":"otlphttp"}],"selector":{"control-plane":"controller-manager"},"type":"ClusterIP"}}
  labels:
    app.kubernetes.io/component: telemetry-proxy
    app.kubernetes.io/created-by: lumigo
    app.kubernetes.io/instance: telemetry-proxy-service
    app.kubernetes.io/name: telemetry-proxy-service
    app.kubernetes.io/part-of: lumigo
  name: lumigo-telemetry-proxy-service
  namespace: lumigo-system
spec:
  ports:
    - name: otlphttp
      port: 80
      protocol: TCP
      targetPort: otlphttp
  selector:
    control-plane: controller-manager
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"app.kubernetes.io/component":"lumigo","app.kubernetes.io/created-by":"lumigo","app.kubernetes.io/instance":"webhooks-service","app.kubernetes.io/managed-by":"kustomize","app.kubernetes.io/name":"webhooks-service","app.kubernetes.io/part-of":"lumigo"},"name":"lumigo-webhooks-service","namespace":"lumigo-system"},"spec":{"ports":[{"port":443,"protocol":"TCP","targetPort":9443}],"selector":{"control-plane":"controller-manager"}}}
  labels:
    app.kubernetes.io/component: lumigo
    app.kubernetes.io/created-by: lumigo
    app.kubernetes.io/instance: webhooks-service
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: webhooks-service
    app.kubernetes.io/part-of: lumigo
  name: lumigo-webhooks-service
  namespace: lumigo-system
spec:
  ports:
    - port: 443
      protocol: TCP
      targetPort: 9443
  selector:
    control-plane: controller-manager
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"app.kubernetes.io/component":"manager","app.kubernetes.io/created-by":"lumigo","app.kubernetes.io/instance":"controller-manager","app.kubernetes.io/managed-by":"kustomize","app.kubernetes.io/name":"deployment","app.kubernetes.io/part-of":"lumigo","control-plane":"controller-manager","lumigo.auto-trace":"false"},"name":"lumigo-controller-manager","namespace":"lumigo-system"},"spec":{"replicas":1,"selector":{"matchLabels":{"control-plane":"controller-manager"}},"template":{"metadata":{"annotations":{"kubectl.kubernetes.io/default-container":"manager"},"labels":{"control-plane":"controller-manager"}},"spec":{"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchExpressions":[{"key":"kubernetes.io/arch","operator":"In","values":["amd64","arm64"]},{"key":"kubernetes.io/os","operator":"In","values":["linux"]}]}]}}},"containers":[{"args":["--health-probe-bind-address=:8081","--metrics-bind-address=127.0.0.1:8080","--leader-elect"],"command":["/manager"],"env":[{"name":"LUMIGO_CONTROLLER_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"LUMIGO_CONTROLLER_POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"TELEMETRY_PROXY_OTLP_SERVICE","value":"http://$(TELEMETRY_PROXY_SERVICE).lumigo-system.svc.cluster.local"},{"name":"LUMIGO_OPERATOR_VERSION","value":"latest"},{"name":"LUMIGO_INJECTOR_IMAGE","value":"public.ecr.aws/lumigo/lumigo-autotrace:latest"},{"name":"LUMIGO_NAMESPACE_CONFIGURATIONS","value":"/lumigo/etc/namespaces/namespaces_to_monitor.json"},{"name":"KUBERNETES_CLUSTER_DOMAIN","value":"cluster.local"}],"image":"host.docker.internal:5000/controller:latest","livenessProbe":{"httpGet":{"path":"/healthz","port":8081},"initialDelaySeconds":15,"periodSeconds":20},"name":"manager","ports":[{"containerPort":9443,"name":"webhook-server","protocol":"TCP"}],"readinessProbe":{"httpGet":{"path":"/readyz","port":8081},"initialDelaySeconds":5,"periodSeconds":10},"resources":{"limits":{"cpu":"500m","memory":"128Mi"},"requests":{"cpu":"10m","memory":"64Mi"}},"securityContext":{"allowPrivilegeEscalation":false,"capabilities":{"drop":["ALL"]},"readOnlyRootFilesystem":true,"runAsNonRoot":true,"runAsUser":1234},"volumeMounts":[{"mountPath":"/tmp/k8s-webhook-server/serving-certs","name":"cert","readOnly":true}]},{"args":["--secure-listen-address=0.0.0.0:8443","--upstream=http://127.0.0.1:8080/","--logtostderr=true","--v=0"],"image":"gcr.io/kubebuilder/kube-rbac-proxy:v0.13.0","name":"kube-rbac-proxy","ports":[{"containerPort":8443,"name":"https","protocol":"TCP"}],"resources":{"limits":{"cpu":"500m","memory":"128Mi"},"requests":{"cpu":"5m","memory":"64Mi"}},"securityContext":{"allowPrivilegeEscalation":false,"capabilities":{"drop":["ALL"]}}},{"image":"host.docker.internal:5000/telemetry-proxy:latest","name":"telemetry-proxy","ports":[{"containerPort":4318,"name":"otlphttp","protocol":"TCP"}],"securityContext":{"allowPrivilegeEscalation":false,"capabilities":{"drop":["ALL"]},"readOnlyRootFilesystem":true,"runAsNonRoot":true,"runAsUser":1234},"volumeMounts":[{"mountPath":"/lumigo/etc/otelcol/","name":"telemetry-proxy-configurations","readOnly":false},{"mountPath":"/lumigo/etc/namespaces/","name":"namespace-configurations","readOnly":false}]}],"securityContext":{"fsGroup":1234,"readOnlyRootFilesystem":true,"runAsNonRoot":true},"serviceAccountName":"lumigo-controller-manager","terminationGracePeriodSeconds":10,"volumes":[{"name":"cert","secret":{"defaultMode":420,"secretName":"webhook-server-cert"}},{"emptyDir":{},"name":"namespace-configurations"},{"emptyDir":{},"name":"telemetry-proxy-configurations"}]}}}}
  labels:
    app.kubernetes.io/component: manager
    app.kubernetes.io/created-by: lumigo
    app.kubernetes.io/instance: controller-manager
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: deployment
    app.kubernetes.io/part-of: lumigo
    control-plane: controller-manager
    lumigo.auto-trace: "false"
  name: lumigo-controller-manager
  namespace: lumigo-system
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: controller-manager
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        control-plane: controller-manager
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: kubernetes.io/arch
                    operator: In
                    values:
                      - amd64
                      - arm64
                  - key: kubernetes.io/os
                    operator: In
                    values:
                      - linux
      containers:
        - args:
            - --health-probe-bind-address=:8081
            - --metrics-bind-address=127.0.0.1:8080
            - --leader-elect
          command:
            - /manager
          env:
            - name: LUMIGO_CONTROLLER_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: LUMIGO_CONTROLLER_POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: TELEMETRY_PROXY_OTLP_SERVICE
              value: http://$(TELEMETRY_PROXY_SERVICE).lumigo-system.svc.cluster.local
            - name: LUMIGO_OPERATOR_VERSION
              value: latest
            - name: LUMIGO_INJECTOR_IMAGE
              value: public.ecr.aws/lumigo/lumigo-autotrace:latest
            - name: LUMIGO_NAMESPACE_CONFIGURATIONS
              value: /lumigo/etc/namespaces/namespaces_to_monitor.json
            - name: KUBERNETES_CLUSTER_DOMAIN
              value: cluster.local
          image: host.docker.internal:5000/controller:latest
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8081
            initialDelaySeconds: 15
            periodSeconds: 20
          name: manager
          ports:
            - containerPort: 9443
              name: webhook-server
              protocol: TCP
          readinessProbe:
            httpGet:
              path: /readyz
              port: 8081
            initialDelaySeconds: 5
            periodSeconds: 10
          resources:
            limits:
              cpu: 500m
              memory: 128Mi
            requests:
              cpu: 10m
              memory: 64Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 1234
          volumeMounts:
            - mountPath: /tmp/k8s-webhook-server/serving-certs
              name: cert
              readOnly: true
        - args:
            - --secure-listen-address=0.0.0.0:8443
            - --upstream=http://127.0.0.1:8080/
            - --logtostderr=true
            - --v=0
          image: gcr.io/kubebuilder/kube-rbac-proxy:v0.13.0
          name: kube-rbac-proxy
          ports:
            - containerPort: 8443
              name: https
              protocol: TCP
          resources:
            limits:
              cpu: 500m
              memory: 128Mi
            requests:
              cpu: 5m
              memory: 64Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
        - image: host.docker.internal:5000/telemetry-proxy:latest
          name: telemetry-proxy
          ports:
            - containerPort: 4318
              name: otlphttp
              protocol: TCP
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 1234
          volumeMounts:
            - mountPath: /lumigo/etc/otelcol/
              name: telemetry-proxy-configurations
              readOnly: false
            - mountPath: /lumigo/etc/namespaces/
              name: namespace-configurations
              readOnly: false
      securityContext:
        fsGroup: 1234
        runAsNonRoot: true
      serviceAccountName: lumigo-controller-manager
      terminationGracePeriodSeconds: 10
      volumes:
        - name: cert
          secret:
            defaultMode: 420
            secretName: webhook-server-cert
        - emptyDir: {}
          name: namespace-configurations
        - emptyDir: {}
          name: telemetry-proxy-configurations
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  annotations:
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"cert-manager.io/v1","kind":"Certificate","metadata":{"annotations":{},"labels":{"app.kubernetes.io/component":"certificate","app.kubernetes.io/created-by":"lumigo","app.kubernetes.io/instance":"serving-cert","app.kubernetes.io/managed-by":"kustomize","app.kubernetes.io/name":"certificate","app.kubernetes.io/part-of":"lumigo"},"name":"lumigo-serving-cert","namespace":"lumigo-system"},"spec":{"dnsNames":["$(INJECTOR_SERVICE_NAME).$(INJECTOR_SERVICE_NAMESPACE).svc","$(INJECTOR_SERVICE_NAME).$(INJECTOR_SERVICE_NAMESPACE).svc.cluster.local"],"issuerRef":{"kind":"Issuer","name":"lumigo-selfsigned-issuer"},"secretName":"webhook-server-cert"}}
  labels:
    app.kubernetes.io/component: certificate
    app.kubernetes.io/created-by: lumigo
    app.kubernetes.io/instance: serving-cert
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: certificate
    app.kubernetes.io/part-of: lumigo
  name: lumigo-serving-cert
  namespace: lumigo-system
spec:
  dnsNames:
    - $(INJECTOR_SERVICE_NAME).$(INJECTOR_SERVICE_NAMESPACE).svc
    - $(INJECTOR_SERVICE_NAME).$(INJECTOR_SERVICE_NAMESPACE).svc.cluster.local
  issuerRef:
    kind: Issuer
    name: lumigo-selfsigned-issuer
  secretName: webhook-server-cert
---
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  annotations:
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"cert-manager.io/v1","kind":"Issuer","metadata":{"annotations":{},"labels":{"app.kubernetes.io/component":"certificate","app.kubernetes.io/created-by":"lumigo","app.kubernetes.io/instance":"selfsigned-issuer","app.kubernetes.io/managed-by":"kustomize","app.kubernetes.io/name":"issuer","app.kubernetes.io/part-of":"lumigo"},"name":"lumigo-selfsigned-issuer","namespace":"lumigo-system"},"spec":{"selfSigned":{}}}
  labels:
    app.kubernetes.io/component: certificate
    app.kubernetes.io/created-by: lumigo
    app.kubernetes.io/instance: selfsigned-issuer
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: issuer
    app.kubernetes.io/part-of: lumigo
  name: lumigo-selfsigned-issuer
  namespace: lumigo-system
spec:
  selfSigned: {}
---
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  annotations:
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"admissionregistration.k8s.io/v1","kind":"MutatingWebhookConfiguration","metadata":{"annotations":{},"creationTimestamp":null,"name":"lumigo-defaulter-webhook-configuration"},"webhooks":[{"admissionReviewVersions":["v1","v1beta1"],"clientConfig":{"caBundle":"Cg==","service":{"name":"lumigo-webhooks-service","namespace":"lumigo-system","path":"/v1alpha1/mutate"}},"failurePolicy":"Fail","name":"lumigodefaulter.kb.io","rules":[{"apiGroups":["operator.lumigo.io"],"apiVersions":["v1alpha1"],"operations":["CREATE","UPDATE"],"resources":["lumigoes"]}],"sideEffects":"None","timeoutSeconds":5}]}
  creationTimestamp: null
  name: lumigo-defaulter-webhook-configuration
webhooks:
  - admissionReviewVersions:
      - v1
      - v1beta1
    clientConfig:
      caBundle: Cg==
      service:
        name: lumigo-webhooks-service
        namespace: lumigo-system
        path: /v1alpha1/mutate
    failurePolicy: Fail
    name: lumigodefaulter.kb.io
    rules:
      - apiGroups:
          - operator.lumigo.io
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - lumigoes
    sideEffects: None
    timeoutSeconds: 5
---
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: lumigo-system/lumigo-serving-cert
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"admissionregistration.k8s.io/v1","kind":"MutatingWebhookConfiguration","metadata":{"annotations":{"cert-manager.io/inject-ca-from":"lumigo-system/lumigo-serving-cert"},"labels":{"app.kubernetes.io/component":"webhook","app.kubernetes.io/created-by":"lumigo","app.kubernetes.io/instance":"mutating-webhook-configuration","app.kubernetes.io/managed-by":"kustomize","app.kubernetes.io/name":"mutatingwebhookconfiguration","app.kubernetes.io/part-of":"lumigo"},"name":"lumigo-injector-webhook-configuration"},"webhooks":[{"admissionReviewVersions":["v1","v1beta1"],"clientConfig":{"caBundle":"Cg==","service":{"name":"lumigo-webhooks-service","namespace":"lumigo-system","path":"/v1alpha1/inject"}},"failurePolicy":"Ignore","name":"lumigoinjector.kb.io","rules":[{"apiGroups":["apps"],"apiVersions":["v1"],"operations":["CREATE","UPDATE"],"resources":["daemonsets","deployments","replicasets","statefulsets"]},{"apiGroups":["batch"],"apiVersions":["v1"],"operations":["CREATE","UPDATE"],"resources":["cronjobs","jobs"]}],"sideEffects":"None","timeoutSeconds":5}]}
  labels:
    app.kubernetes.io/component: webhook
    app.kubernetes.io/created-by: lumigo
    app.kubernetes.io/instance: mutating-webhook-configuration
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: mutatingwebhookconfiguration
    app.kubernetes.io/part-of: lumigo
  name: lumigo-injector-webhook-configuration
webhooks:
  - admissionReviewVersions:
      - v1
      - v1beta1
    clientConfig:
      caBundle: Cg==
      service:
        name: lumigo-webhooks-service
        namespace: lumigo-system
        path: /v1alpha1/inject
    failurePolicy: Ignore
    name: lumigoinjector.kb.io
    rules:
      - apiGroups:
          - apps
        apiVersions:
          - v1
        operations:
          - CREATE
          - UPDATE
        resources:
          - daemonsets
          - deployments
          - replicasets
          - statefulsets
      - apiGroups:
          - batch
        apiVersions:
          - v1
        operations:
          - CREATE
          - UPDATE
        resources:
          - cronjobs
          - jobs
    sideEffects: None
    timeoutSeconds: 5
