{{/*
Since Helm does not support creating new global values, templating the values.yaml, or even sharing variables between templates in the same chart,
we are forced to put in the same file all resources that are related with self-signed certificate.
 */}}
{{- $altNames := list ( printf "%s.%s" (include "helm.fullname" .) .Release.Name ) ( printf "%s-service.%s.svc" (include "helm.fullname" .) .Release.Namespace ) ( printf "%s-webhooks-service.%s.svc" (include "helm.fullname" .) .Release.Namespace ) -}}
{{- $ca := genCA "lumigo-webhooks-ca" 365 -}}
{{- $cert := genSignedCert ( include "helm.name" . ) nil $altNames 365 $ca -}}
{{- $certFingerprint := $cert.Cert | b64enc | substr 10 25 | quote }}
{{- $lumigoOperatorVersion := .Values.controllerManager.manager.image.tag | default .Chart.AppVersion }}
---
apiVersion: v1
kind: Secret
type: kubernetes.io/tls
metadata:
  name: '{{ include "helm.fullname" . }}-lumigo-injector-webhook-certs'
  labels:
  {{- include "helm.labels" . | nindent 4 }}
data:
  tls.crt: {{ $cert.Cert | b64enc }}
  tls.key: {{ $cert.Key | b64enc }}
  ca.crt: {{ $ca.Cert | b64enc }}
---
{{- if .Values.lumigoToken.value }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ .Values.lumigoToken.secretName }}
  labels:
  {{- include "helm.labels" . | nindent 4 }}
data:
  "{{ .Values.lumigoToken.secretKey }}": {{ .Values.lumigoToken.value | b64enc }}
{{- end }}
---
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: {{ include "helm.fullname" . }}-injector-webhook-configuration
  labels:
  {{- include "helm.labels" . | nindent 4 }}
webhooks:
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    caBundle: {{ default "" ( $ca.Cert | b64enc ) }}
    service:
      name: '{{ include "helm.fullname" . }}-webhooks-service'
      namespace: '{{ .Release.Namespace }}'
      path: /v1alpha1/inject
  failurePolicy: Ignore
  name: lumigoinjector.kb.io
  rules:
  - apiGroups:
    - apps
    apiVersions:
    - v1
    operations:
    - CREATE
    - UPDATE
    resources:
    - daemonsets
    - deployments
    - replicasets
    - statefulsets
  - apiGroups:
    - batch
    apiVersions:
    - v1
    operations:
    - CREATE
    - UPDATE
    resources:
    - cronjobs
    - jobs
  sideEffects: None
  timeoutSeconds: 5
---
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: {{ include "helm.fullname" . }}-defaulter-webhook-configuration
  labels:
  {{- include "helm.labels" . | nindent 4 }}
webhooks:
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    caBundle: {{ default "" ( $ca.Cert | b64enc ) }}
    service:
      name: '{{ include "helm.fullname" . }}-webhooks-service'
      namespace: '{{ .Release.Namespace }}'
      path: /v1alpha1/mutate
  failurePolicy: Fail
  name: lumigodefaulter.kb.io
  rules:
  - apiGroups:
    - operator.lumigo.io
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - lumigoes
  sideEffects: None
  timeoutSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: {{ include "helm.fullname" . }}-webhooks-service
  labels:
  {{- include "helm.labels" . | nindent 4 }}
    app.kubernetes.io/component: lumigo
    app.kubernetes.io/created-by: lumigo
    app.kubernetes.io/part-of: lumigo
spec:
  type: {{ .Values.injectorWebhookService.type }}
  selector:
  {{- include "helm.selectorLabels" . | nindent 4 }}
    control-plane: controller-manager
    lumigo.cert-digest: {{ $certFingerprint }}
  ports:
  {{- .Values.injectorWebhookService.ports | toYaml | nindent 2 }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "helm.fullname" . }}-controller-manager
  labels:
  {{- include "helm.labels" . | nindent 4 }}
    app.kubernetes.io/component: manager
    app.kubernetes.io/created-by: lumigo
    app.kubernetes.io/part-of: lumigo
    control-plane: controller-manager
    lumigo.auto-trace: 'false' # We do not need the operator to inject itself
spec:
  # this must be 1, as the events-scraper is not meant run in multiple replicas
  # as this will result in duplicate events being scraped
  replicas: 1
  selector:
    matchLabels:
      control-plane: controller-manager
    {{- include "helm.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
      {{- include "helm.selectorLabels" . | nindent 8 }}
        control-plane: controller-manager
        lumigo.auto-trace: 'false' # We do not need the operator to inject itself
        lumigo.cert-digest: {{ print $certFingerprint }}
      annotations:
        kubectl.kubernetes.io/default-container: manager
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/arch
                operator: In
                values:
                - amd64
                - arm64
              - key: kubernetes.io/os
                operator: In
                values:
                - linux
      containers:
      - name: manager
        image: {{ .Values.controllerManager.manager.image.repository }}:{{ .Values.controllerManager.manager.image.tag | default .Chart.AppVersion }}
        command:
        - /manager
        args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=127.0.0.1:8080
        - --leader-elect
        env:
        - name: LUMIGO_DEBUG
          value: "{{ .Values.debug.enabled | default false }}"
        - name: LUMIGO_CONTROLLER_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: LUMIGO_CONTROLLER_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: KUBERNETES_CLUSTER_DOMAIN
          value: {{ .Values.kubernetesClusterDomain }}
        - name: TELEMETRY_PROXY_OTLP_SERVICE
          value: "http://{{ include "helm.fullname" . }}-telemetry-proxy-service.{{ .Release.Namespace }}.svc.cluster.local"
        - name: LUMIGO_NAMESPACE_CONFIGURATIONS
          value: /lumigo/etc/namespaces/namespaces_to_monitor.json
        - name: LUMIGO_OPERATOR_VERSION
          value: "{{ $lumigoOperatorVersion }}"
        - name: LUMIGO_OPERATOR_DEPLOYMENT_METHOD
          value: "helm-{{ .Capabilities.HelmVersion.Version }}"
        - name: LUMIGO_INJECTOR_IMAGE
          value: {{ .Values.injectorWebhook.lumigoInjector.image.repository }}:{{ .Values.injectorWebhook.lumigoInjector.image.tag | default "latest" }}
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources: {{- toYaml .Values.controllerManager.manager.resources | nindent 10 }}
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 1234
        volumeMounts:
        - name: cert
          mountPath: /tmp/k8s-webhook-server/serving-certs
          readOnly: true
        - name: namespace-configurations
          mountPath: /lumigo/etc/namespaces/
          readOnly: false
      - name: events-scraper
        image: {{ .Values.controllerManager.telemetryProxy.image.repository }}:{{ .Values.controllerManager.telemetryProxy.image.tag | default .Chart.AppVersion }}
        env:
{{- if and .Values.cluster .Values.cluster.name }}
        - name: KUBERNETES_CLUSTER_NAME
          value: "{{ .Values.cluster.name }}"
{{- end }}
        - name: LUMIGO_DEBUG
          value: "{{ .Values.debug.enabled | default false }}"
        - name: LUMIGO_LOGS_ENDPOINT
          value: "{{ .Values.endpoint.otlp.logs_url }}"
        - name: "LUMIGO_WATCHDOG_ENABLED"
          value: "{{ .Values.watchdog.enabled }}"
{{ if .Values.watchdog.enabled }}
        - name: LUMIGO_METRICS_ENDPOINT
          value: "{{ .Values.endpoint.otlp.metrics_url }}"
        - name: "LUMIGO_OTELCOL_METRICS_SCRAPING_FREQUENCY"
          value: "{{ .Values.watchdog.otelCollector.internalMetricsFrequency }}"
{{ end }}
{{- if .Values.lumigoToken }}
        - name: LUMIGO_INFRA_METRICS_TOKEN
          valueFrom:
            secretKeyRef:
              name: {{ .Values.lumigoToken.secretName }}
              key: {{ .Values.lumigoToken.secretKey }}
              optional: true
{{- end }}
        - name: LUMIGO_OPERATOR_VERSION
          value: "{{ $lumigoOperatorVersion }}"
        - name: LUMIGO_OPERATOR_DEPLOYMENT_METHOD
          value: "Helm-{{ .Capabilities.HelmVersion.Version }}"
        - name: LUMIGO_OPERATOR_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: OTELCOL_CONFIG_TEMPLATE_FILE_PATH
          value: /lumigo/etc/otelcol-events-config.yaml.tpl
        ports:
        - containerPort: 4318
          name: otlphttp
          protocol: TCP
        resources: {{- toYaml .Values.controllerManager.telemetryProxy.resources | nindent 10 }}
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          runAsNonRoot: true
          runAsUser: 1234
        volumeMounts:
        - name: telemetry-proxy-configurations
          mountPath: /lumigo/etc/otelcol/
          readOnly: false
        - name: namespace-configurations
          mountPath: /lumigo/etc/namespaces/
          readOnly: false
      - name: kube-rbac-proxy
        image: {{ .Values.controllerManager.kubeRbacProxy.image.repository }}:{{ .Values.controllerManager.kubeRbacProxy.image.tag | default .Chart.AppVersion }}
        args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:8080/
        - --logtostderr=true
        - --v=0
        env:
        - name: KUBERNETES_CLUSTER_DOMAIN
          value: {{ .Values.kubernetesClusterDomain }}
        # - name: GOMEMLIMIT
        #   value: {{ .Values.controllerManager.kubeRbacProxy.resources.limits.memory }}
        ports:
        - containerPort: 8443
          name: https
          protocol: TCP
        resources: {{- toYaml .Values.controllerManager.kubeRbacProxy.resources | nindent 10 }}
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
      - name: namespace-config-server
        image: busybox:1.35
        command: ["httpd", "-f", "-p", "8077", "-h", "/namespaces"]
        volumeMounts:
        - name: namespace-configurations
          mountPath: /namespaces
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: false
          runAsNonRoot: false
      securityContext:
        runAsNonRoot: true
        fsGroup: 1234
      serviceAccountName: lumigo-kubernetes-operator
      terminationGracePeriodSeconds: 10
      volumes:
      - name: cert
        secret:
          defaultMode: 420
          secretName: '{{ include "helm.fullname" . }}-lumigo-injector-webhook-certs'
      - name: namespace-configurations
        emptyDir: {}
      - name: telemetry-proxy-configurations
        emptyDir: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "helm.fullname" . }}-telemetry-proxy
  labels:
  {{- include "helm.labels" . | nindent 4 }}
    app.kubernetes.io/component: telemetry-proxy
    app.kubernetes.io/created-by: lumigo
    app.kubernetes.io/part-of: lumigo
    control-plane: telemetry-proxy
    lumigo.auto-trace: 'false' # We do not need the operator to inject itself
spec:
  replicas: {{ .Values.telemetryProxy.replicas }}
  selector:
    matchLabels:
      control-plane: telemetry-proxy
    {{- include "helm.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
      {{- include "helm.selectorLabels" . | nindent 8 }}
        control-plane: telemetry-proxy
        lumigo.auto-trace: 'false' # We do not need the operator to inject itself
        lumigo.cert-digest: {{ print $certFingerprint }}
        lumigo.metrics-scraper: 'true' # so it will be assigned with scraping targets by the target-allocator
      annotations:
        kubectl.kubernetes.io/default-container: telemetry-proxy
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/arch
                operator: In
                values:
                - amd64
                - arm64
              - key: kubernetes.io/os
                operator: In
                values:
                - linux
      containers:
      - name: telemetry-proxy
        image: {{ .Values.telemetryProxy.image.repository }}:{{ .Values.telemetryProxy.image.tag | default .Chart.AppVersion }}
        env:
{{- if and .Values.cluster .Values.cluster.name }}
        - name: KUBERNETES_CLUSTER_NAME
          value: "{{ .Values.cluster.name }}"
{{- end }}
        - name: LUMIGO_DEBUG
          value: "{{ .Values.debug.enabled | default false }}"
        - name: LUMIGO_ENDPOINT
          value: "{{ .Values.endpoint.otlp.url }}"
        - name: LUMIGO_LOGS_ENDPOINT
          value: "{{ .Values.endpoint.otlp.logs_url }}"
        - name: LUMIGO_METRICS_ENDPOINT
          value: "{{ .Values.endpoint.otlp.metrics_url }}"
{{- if .Values.lumigoToken }}
        - name: LUMIGO_INFRA_METRICS_TOKEN
          valueFrom:
            secretKeyRef:
              name: {{ .Values.lumigoToken.secretName }}
              key: {{ .Values.lumigoToken.secretKey }}
              optional: true
{{- end }}
        - name: LUMIGO_INFRA_METRICS_ENABLED
          value: "{{ .Values.clusterCollection.metrics.enabled }}"
{{- if .Values.clusterCollection.metrics.enabled }}
        - name: LUMIGO_TARGET_ALLOCATOR_ENDPOINT
          value: "http://{{ include "helm.fullname" . }}-target-allocator.{{ .Release.Namespace }}.svc.cluster.local"
        - name: LUMIGO_INFRA_METRICS_SCRAPING_FREQUENCY
          value: "{{ .Values.clusterCollection.metrics.frequency }}"
        - name: LUMIGO_CLUSTER_AGENT_SERVICE
          value: "{{ include "helm.fullname" . }}-cluster-agent-service.{{ .Release.Namespace }}.svc.cluster.local"
        - name: LUMIGO_PROM_NODE_EXPORTER_PORT
          value: "{{ .Values.prometheusNodeExporter.service.nodePort }}"
        - name: LUMIGO_KUBE_STATE_METRICS_SERVICE
          value: "{{ include "helm.fullname" . }}-kube-state-metrics.{{ .Release.Namespace }}.svc.cluster.local"
        - name: LUMIGO_KUBE_STATE_METRICS_PORT
          value: "{{ index .Values "kube-state-metrics" "service" "port" }}"
        - name: LUMIGO_EXPORT_ESSENTIAL_METRICS_ONLY
          value: "{{ .Values.clusterCollection.metrics.essentialOnly }}"
{{- end }}
        - name: "LUMIGO_WATCHDOG_ENABLED"
          value: "{{ .Values.watchdog.enabled }}"
{{ if .Values.watchdog.enabled }}
        - name: "LUMIGO_OTELCOL_METRICS_SCRAPING_FREQUENCY"
          value: "{{ .Values.watchdog.otelCollector.internalMetricsFrequency }}"
{{ end }}
        - name: LUMIGO_OPERATOR_VERSION
          value: "{{ $lumigoOperatorVersion }}"
        - name: LUMIGO_OPERATOR_DEPLOYMENT_METHOD
          value: "Helm-{{ .Capabilities.HelmVersion.Version }}"
        - name: LUMIGO_OPERATOR_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: LUMIGO_OPERATOR_NAMESPACE_LIST_URL
          value: "http://{{ include "helm.fullname" . }}-webhooks-service.{{ .Release.Namespace }}.svc.cluster.local:8077/namespaces_to_monitor.json"
        ports:
        - containerPort: 4318
          name: otlphttp
          protocol: TCP
        resources: {{- toYaml .Values.telemetryProxy.resources | nindent 10 }}
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          runAsNonRoot: true
          runAsUser: 1234
        volumeMounts:
        - name: telemetry-proxy-configurations
          mountPath: /lumigo/etc/otelcol/
          readOnly: false
        - name: namespace-configurations
          mountPath: /lumigo/etc/namespaces/
          readOnly: false
      securityContext:
        runAsNonRoot: true
        fsGroup: 1234
      serviceAccountName: lumigo-kubernetes-operator
      terminationGracePeriodSeconds: 10
      volumes:
      - name: namespace-configurations
        emptyDir: {}
      - name: telemetry-proxy-configurations
        emptyDir: {}