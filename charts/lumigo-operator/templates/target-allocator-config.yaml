{{- define "essentialMetricsRegex" -}}
{{- $essentialMetrics := .Values.clusterCollection.metrics.essentialMetrics.names -}}
{{- $essentialMetricsRegex := join "|" $essentialMetrics -}}
{{- $essentialMetricsRegex -}}
{{- end -}}
{{- define "targetAllocator.config" -}}
allocation_strategy: consistent-hashing
collector_selector:
  matchlabels:
    lumigo.metrics-scraper: 'true'
config:
  global:
    scrape_interval: {{ .Values.clusterCollection.metrics.frequency }}
  scrape_configs:
    - job_name: 'k8s-infra-metrics'
      metrics_path: /metrics
      scrape_interval: {{ .Values.clusterCollection.metrics.frequency }}
      scheme: https
      tls_config:
        insecure_skip_verify: true
      kubernetes_sd_configs:
        - role: node
      authorization:
        credentials_file: "/var/run/secrets/kubernetes.io/serviceaccount/token"
      {{- if .Values.clusterCollection.metrics.essentialOnly }}
      metric_relabel_configs:
        - source_labels: [__name__]
          action: keep
          regex: '{{ include "essentialMetricsRegex" . }}'
      {{- end }}
    - job_name: 'k8s-infra-metrics-cadvisor'
      metrics_path: /metrics/cadvisor
      scrape_interval: {{ .Values.clusterCollection.metrics.frequency }}
      scheme: https
      tls_config:
        insecure_skip_verify: true
      kubernetes_sd_configs:
        - role: node
      authorization:
        credentials_file: "/var/run/secrets/kubernetes.io/serviceaccount/token"
      {{- if .Values.clusterCollection.metrics.essentialOnly }}
      metric_relabel_configs:
        - source_labels: [__name__]
          action: keep
          regex: '{{ include "essentialMetricsRegex" . }}'
      {{- end }}
    - job_name: 'k8s-infra-metrics-resources'
      metrics_path: /metrics/resource
      scrape_interval: {{ .Values.clusterCollection.metrics.frequency }}
      scheme: https
      tls_config:
        insecure_skip_verify: true
      kubernetes_sd_configs:
        - role: node
      authorization:
        credentials_file: "/var/run/secrets/kubernetes.io/serviceaccount/token"
      metric_relabel_configs:
      {{- if .Values.clusterCollection.metrics.essentialOnly }}
        - source_labels: [__name__]
          action: keep
          regex: '{{ include "essentialMetricsRegex" . }}'
      {{- end }}
        # remove duplicate metrics scraped by the k8s-infra-metrics-cadvisor job
        - source_labels: [__name__]
          action: drop
          regex: 'container_cpu_usage_seconds_total|container_start_time_seconds|container_memory_working_set_bytes'
    - job_name: 'prometheus-node-exporter'
      kubernetes_sd_configs:
        - role: node
      relabel_configs:
        - source_labels: [__meta_kubernetes_node_address_InternalIP]
          action: replace
          target_label: __address__
          # Scrape a custom port
          replacement: '$1:{{ .Values.prometheusNodeExporter.service.nodePort }}'
        - source_labels: [__meta_kubernetes_node_name]
          action: replace
          target_label: node
      metrics_path: "/metrics"
      authorization:
        credentials_file: "/var/run/secrets/kubernetes.io/serviceaccount/token"
      metric_relabel_configs:
      {{- if .Values.clusterCollection.metrics.essentialOnly }}
        - source_labels: [__name__]
          action: keep
          regex: '{{ include "essentialMetricsRegex" . }}'
      {{- end }}
        # remove duplicate metrics scraped by the k8s-infra-metrics job
        - source_labels: [__name__]
          action: drop
          regex: 'process_virtual_memory_max_bytes|process_virtual_memory_bytes|process_start_time_seconds|process_resident_memory_bytes|process_open_fds|process_max_fds|process_cpu_seconds_total'
    - job_name: 'kube-state-metrics'
      metrics_path: /metrics
      scrape_interval: {{ .Values.clusterCollection.metrics.frequency }}
      static_configs:
        - targets: ['{{ .Release.Name }}-kube-state-metrics.{{ .Release.Namespace }}.svc.cluster.local:{{ index .Values "kube-state-metrics" "service" "port" }}']
      {{- if .Values.clusterCollection.metrics.essentialOnly }}
      metric_relabel_configs:
        - source_labels: [__name__]
          action: keep
          regex: '{{ include "essentialMetricsRegex" . }}'
      {{- end }}
{{- end }}