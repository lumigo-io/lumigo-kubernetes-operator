{{- define "clusterAgent.otelCollectorConfig" -}}
{{ $logCollectionEnabled := .Values.clusterCollection.logs.enabled }}
{{ $watchdogLogsEnabled := and .Values.watchdog.enabled .Values.watchdog.logs.enabled }}
receivers:
{{ if $logCollectionEnabled }}
  filelog/application:
    include:
      {{ if .Values.clusterCollection.logs.include }}
        {{- range .Values.clusterCollection.logs.include }}
      - /var/log/pods/{{ .namespacePattern | default "*" }}_{{ .podPattern | default "*" }}_*/{{ .containerPattern | default "*" }}/*.log
        {{- end }}
      {{- else }}
      - /var/log/pods/*/*/*.log
      {{- end }}
    exclude:
      - /var/log/pods/{{ .Release.Namespace }}_*/*/*.log
      - /var/log/pods/kube-system_*/*/*.log
      # Exclude logs from the otlp-sink in tests (Kind cluster)
      - /var/log/pods/local-path-storage_*/*/*.log
      - /var/log/pods/otlp-sink_*/*/*.log
      {{ if .Values.clusterCollection.logs.exclude }}
      {{- range .Values.clusterCollection.logs.exclude }}
      - /var/log/pods/{{ .namespacePattern | default "*" }}_{{ .podPattern | default "*" }}_*/{{ .containerPattern | default "*" }}/*.log
      {{- end }}
      {{- end }}
    start_at: end
    include_file_path: true
    include_file_name: false
    operators:
{{ include "clusterAgent.otelCollectorConfig.filelogreceiver.operators" . | indent 4 }}
{{- end }}
{{- if $watchdogLogsEnabled }}
  filelog/watchdog:
    include:
      - /var/log/pods/{{ .Release.Namespace }}_{{ include "helm.fullname" . }}-controller-manager-*_*/*/*.log
      - /var/log/pods/{{ .Release.Namespace }}_{{ include "helm.fullname" . }}-telemetry-proxy-*_*/*/*.log
    start_at: end
    include_file_path: true
    include_file_name: false
    operators:
{{ include "clusterAgent.otelCollectorConfig.filelogreceiver.operators" . | indent 4 }}
{{- end }}

exporters:
  otlphttp:
    endpoint: ${env:LUMIGO_LOGS_ENDPOINT}
    headers:
      Authorization: LumigoToken ${env:LUMIGO_TOKEN}
{{- if .Values.debug.enabled }}
  debug:
    verbosity: detailed
{{- end }}
processors:
  batch:
  transform/application:
    log_statements:
      - context: log
        statements:
          - set(instrumentation_scope.name, "lumigo-operator.log_file_collector")
          - set(resource.attributes["k8s.cluster.name"], "${env:KUBERNETES_CLUSTER_NAME}")
  transform/watchdog:
    log_statements:
      - context: log
        statements:
          - set(instrumentation_scope.name, "lumigo-operator.watchdog.log_file_collector")
          - set(resource.attributes["k8s.cluster.name"], "${env:KUBERNETES_CLUSTER_NAME}")
  filter/drop_non_error_logs:
    error_mode: propagate
    logs:
      log_record:
        - not IsMap(log.attributes["parsed_body"])
        - not IsString(log.attributes["parsed_body"]["error"])

service:
{{- if .Values.debug.enabled }}
  telemetry:
    logs:
      level: debug
      encoding: json
{{- end }}
  pipelines:
{{ if $logCollectionEnabled }}
    logs/application:
      receivers:
        - filelog/application
      processors:
        - transform/application
        - batch
      exporters:
        - otlphttp
{{- if .Values.debug.enabled }}
        - debug
{{- end }}
{{- end }}
{{- if $watchdogLogsEnabled }}
    logs/watchdog:
      receivers:
        - filelog/watchdog
      processors:
        - filter/drop_non_error_logs
        - transform/watchdog
        - batch
      exporters:
        - otlphttp
{{- if .Values.debug.enabled }}
        - debug
{{- end }}
{{- end }}
{{- end }}