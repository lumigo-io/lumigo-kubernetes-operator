apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ include "helm.fullname" . }}-target-allocator
  namespace: {{ .Release.Namespace }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: {{ include "helm.fullname" . }}-target-allocator
rules:
  - apiGroups: [""]
    resources: ["nodes", "pods", "endpoints", "services"]
    verbs: ["get", "list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: {{ include "helm.fullname" . }}-target-allocator-binding
subjects:
  - kind: ServiceAccount
    name: {{ include "helm.fullname" . }}-target-allocator
    namespace: {{ .Release.Namespace }}
roleRef:
  kind: ClusterRole
  name: {{ include "helm.fullname" . }}-target-allocator
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "helm.fullname" . }}-target-allocator-config
  namespace: {{ .Release.Namespace }}
data:
  target-allocator-config.yaml:
      {{ include "targetAllocator.config" . | toYaml | nindent 4 }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "helm.fullname" . }}-target-allocator
  namespace: {{ .Release.Namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ include "helm.fullname" . }}-target-allocator
  template:
    metadata:
      labels:
        app: {{ include "helm.fullname" . }}-target-allocator
      annotations:
        # This effectively triggers a restart of the Deployment pods when the config changes, which is otherwise not the case for ConfigMaps in k8s.
        lumigo.io/ta-config-version: {{ include "targetAllocator.config" . | sha256sum | substr 0 10 | quote }}
    spec:
      serviceAccountName: {{ include "helm.fullname" . }}-target-allocator
{{- if .Values.tolerations }}
      tolerations:
{{- toYaml .Values.tolerations | nindent 8 }}
{{- end }}
      containers:
        - name: target-allocator
          image: "{{ .Values.targetAllocator.image.repository }}:{{ .Values.targetAllocator.image.tag }}"
          env:
            - name: OTELCOL_NAMESPACE
              value: "{{ .Release.Namespace }}"
          args:
            - "--config-file=/conf/target-allocator-config.yaml"
{{- if .Values.debug.enabled }}
            - "--zap-log-level=debug"
{{- end }}
          ports:
            - containerPort: 80
          volumeMounts:
            - name: config
              mountPath: /conf
      volumes:
        - name: config
          configMap:
            name: {{ include "helm.fullname" . }}-target-allocator-config
---
apiVersion: v1
kind: Service
metadata:
  name: {{ include "helm.fullname" . }}-target-allocator
  namespace: {{ .Release.Namespace }}
spec:
  selector:
    app: {{ include "helm.fullname" . }}-target-allocator
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080