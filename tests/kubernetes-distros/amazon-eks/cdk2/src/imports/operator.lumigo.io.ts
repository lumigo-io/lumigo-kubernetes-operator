// generated by cdk8s
import { ApiObject, ApiObjectMetadata, GroupVersionKind } from 'cdk8s';
import { Construct } from 'constructs';


/**
 * Lumigo is the Schema for the lumigoes API
 *
 * @schema Lumigo
 */
export class Lumigo extends ApiObject {
  /**
   * Returns the apiVersion and kind for "Lumigo"
   */
  public static readonly GVK: GroupVersionKind = {
    apiVersion: 'operator.lumigo.io/v1alpha1',
    kind: 'Lumigo',
  }

  /**
   * Renders a Kubernetes manifest for "Lumigo".
   *
   * This can be used to inline resource manifests inside other objects (e.g. as templates).
   *
   * @param props initialization props
   */
  public static manifest(props: LumigoProps = {}): any {
    return {
      ...Lumigo.GVK,
      ...toJson_LumigoProps(props),
    };
  }

  /**
   * Defines a "Lumigo" API object
   * @param scope the scope in which to define this object
   * @param id a scope-local name for the object
   * @param props initialization props
   */
  public constructor(scope: Construct, id: string, props: LumigoProps = {}) {
    super(scope, id, {
      ...Lumigo.GVK,
      ...props,
    });
  }

  /**
   * Renders the object to Kubernetes JSON.
   */
  public toJson(): any {
    const resolved = super.toJson();

    return {
      ...Lumigo.GVK,
      ...toJson_LumigoProps(resolved),
    };
  }
}

/**
 * Lumigo is the Schema for the lumigoes API
 *
 * @schema Lumigo
 */
export interface LumigoProps {
  /**
   * @schema Lumigo#metadata
   */
  readonly metadata?: ApiObjectMetadata;

  /**
   * LumigoSpec defines the desired state of Lumigo
   *
   * @schema Lumigo#spec
   */
  readonly spec?: LumigoSpec;

}

/**
 * Converts an object of type 'LumigoProps' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_LumigoProps(obj: LumigoProps | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'metadata': obj.metadata,
    'spec': toJson_LumigoSpec(obj.spec),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * LumigoSpec defines the desired state of Lumigo
 *
 * @schema LumigoSpec
 */
export interface LumigoSpec {
  /**
   * The Lumigo token to be used to authenticate against Lumigo. For info on how to retrieve your Lumigo token, refer to: https://docs.lumigo.io/docs/lumigo-tokens
   *
   * @schema LumigoSpec#lumigoToken
   */
  readonly lumigoToken?: LumigoSpecLumigoToken;

  /**
   * TracingSpec specified how distributed tracing (for example: tracer injection) should be set up by the operator
   *
   * @schema LumigoSpec#tracing
   */
  readonly tracing?: LumigoSpecTracing;

}

/**
 * Converts an object of type 'LumigoSpec' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_LumigoSpec(obj: LumigoSpec | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'lumigoToken': toJson_LumigoSpecLumigoToken(obj.lumigoToken),
    'tracing': toJson_LumigoSpecTracing(obj.tracing),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * The Lumigo token to be used to authenticate against Lumigo. For info on how to retrieve your Lumigo token, refer to: https://docs.lumigo.io/docs/lumigo-tokens
 *
 * @schema LumigoSpecLumigoToken
 */
export interface LumigoSpecLumigoToken {
  /**
   * Reference to a Kubernetes secret that contains the credentials for Lumigo. The secret must be in the same namespace as the LumigoSpec referencing it.
   *
   * @schema LumigoSpecLumigoToken#secretRef
   */
  readonly secretRef?: LumigoSpecLumigoTokenSecretRef;

}

/**
 * Converts an object of type 'LumigoSpecLumigoToken' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_LumigoSpecLumigoToken(obj: LumigoSpecLumigoToken | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'secretRef': toJson_LumigoSpecLumigoTokenSecretRef(obj.secretRef),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * TracingSpec specified how distributed tracing (for example: tracer injection) should be set up by the operator
 *
 * @schema LumigoSpecTracing
 */
export interface LumigoSpecTracing {
  /**
   * @schema LumigoSpecTracing#injection
   */
  readonly injection: LumigoSpecTracingInjection;

}

/**
 * Converts an object of type 'LumigoSpecTracing' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_LumigoSpecTracing(obj: LumigoSpecTracing | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'injection': toJson_LumigoSpecTracingInjection(obj.injection),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Reference to a Kubernetes secret that contains the credentials for Lumigo. The secret must be in the same namespace as the LumigoSpec referencing it.
 *
 * @schema LumigoSpecLumigoTokenSecretRef
 */
export interface LumigoSpecLumigoTokenSecretRef {
  /**
   * Key of the Kubernetes secret that contains the credential data.
   *
   * @schema LumigoSpecLumigoTokenSecretRef#key
   */
  readonly key?: string;

  /**
   * Name of a Kubernetes secret.
   *
   * @schema LumigoSpecLumigoTokenSecretRef#name
   */
  readonly name: string;

}

/**
 * Converts an object of type 'LumigoSpecLumigoTokenSecretRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_LumigoSpecLumigoTokenSecretRef(obj: LumigoSpecLumigoTokenSecretRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema LumigoSpecTracingInjection
 */
export interface LumigoSpecTracingInjection {
  /**
   * Whether Daemonsets, Deployments, ReplicaSets, StatefulSets, CronJobs and Jobs will be injected by Lumigo or not. If unspecified, defaults to `true`
   *
   * @schema LumigoSpecTracingInjection#enabled
   */
  readonly enabled: boolean;

}

/**
 * Converts an object of type 'LumigoSpecTracingInjection' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_LumigoSpecTracingInjection(obj: LumigoSpecTracingInjection | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'enabled': obj.enabled,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

